{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WIN10\\\\Downloads\\\\ai-code-review-mock\\\\ai-code-review-mock\\\\frontend\\\\src\\\\pages\\\\PRDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams, Link } from \"react-router-dom\";\nimport { parseDiff, Diff, Hunk } from \"react-diff-view\";\nimport \"react-diff-view/style/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PRDetails() {\n  _s();\n  var _prDetails$user;\n  const {\n    owner,\n    repo,\n    number\n  } = useParams();\n  const [prDetails, setPrDetails] = useState(null);\n  const [fileDiffs, setFileDiffs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    const fetchData = async () => {\n      // 1. PR details\n      const res = await fetch(`http://localhost:5001/github/repos/${owner}/${repo}/pulls/${number}/details`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const data = await res.json();\n      setPrDetails(data.details || data);\n\n      // 2. PR file changes\n      const filesRes = await fetch(`http://localhost:5001/github/repos/${owner}/${repo}/pulls/${number}/files`, {\n        headers: {\n          Authorization: `Bearer ${token}`\n        }\n      });\n      const filesData = await filesRes.json();\n\n      // Parse patches for rendering\n      const patches = filesData.filter(f => f.patch).map(f => ({\n        filename: f.filename,\n        patch: f.patch\n      }));\n      const diffText = patches.map(p => `diff --git a/${p.filename} b/${p.filename}\\n${p.patch}`).join(\"\\n\");\n      const parsed = parseDiff(diffText);\n      setFileDiffs(parsed);\n      setLoading(false);\n    };\n    fetchData();\n  }, [owner, repo, number]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading PR details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 23\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"PR #\", prDetails.number, \": \", prDetails.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 10\n      }, this), \" \", (_prDetails$user = prDetails.user) === null || _prDetails$user === void 0 ? void 0 : _prDetails$user.login]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Files Changed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), fileDiffs.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: file.newPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Diff, {\n        viewType: \"split\",\n        diffType: file.type,\n        hunks: file.hunks,\n        children: hunks => hunks.map(hunk => /*#__PURE__*/_jsxDEV(Hunk, {\n          hunk: hunk\n        }, hunk.content, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 33\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 11\n      }, this)]\n    }, file.newPath, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(PRDetails, \"Uc5Zsg7lck3E8wCle6uZ6qeHO2I=\", false, function () {\n  return [useParams];\n});\n_c = PRDetails;\nvar _c;\n$RefreshReg$(_c, \"PRDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","Link","parseDiff","Diff","Hunk","jsxDEV","_jsxDEV","PRDetails","_s","_prDetails$user","owner","repo","number","prDetails","setPrDetails","fileDiffs","setFileDiffs","loading","setLoading","token","localStorage","getItem","fetchData","res","fetch","headers","Authorization","data","json","details","filesRes","filesData","patches","filter","f","patch","map","filename","diffText","p","join","parsed","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","user","login","file","style","marginBottom","newPath","viewType","diffType","type","hunks","hunk","content","_c","$RefreshReg$"],"sources":["C:/Users/WIN10/Downloads/ai-code-review-mock/ai-code-review-mock/frontend/src/pages/PRDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams, Link } from \"react-router-dom\";\r\nimport { parseDiff, Diff, Hunk } from \"react-diff-view\";\r\nimport \"react-diff-view/style/index.css\";\r\n\r\nexport default function PRDetails() {\r\n  const { owner, repo, number } = useParams();\r\n  const [prDetails, setPrDetails] = useState(null);\r\n  const [fileDiffs, setFileDiffs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n\r\n    const fetchData = async () => {\r\n      // 1. PR details\r\n      const res = await fetch(\r\n        `http://localhost:5001/github/repos/${owner}/${repo}/pulls/${number}/details`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const data = await res.json();\r\n      setPrDetails(data.details || data);\r\n\r\n      // 2. PR file changes\r\n      const filesRes = await fetch(\r\n        `http://localhost:5001/github/repos/${owner}/${repo}/pulls/${number}/files`,\r\n        { headers: { Authorization: `Bearer ${token}` } }\r\n      );\r\n      const filesData = await filesRes.json();\r\n\r\n      // Parse patches for rendering\r\n      const patches = filesData\r\n        .filter(f => f.patch)\r\n        .map(f => ({\r\n          filename: f.filename,\r\n          patch: f.patch\r\n        }));\r\n\r\n      const diffText = patches\r\n        .map(p => `diff --git a/${p.filename} b/${p.filename}\\n${p.patch}`)\r\n        .join(\"\\n\");\r\n\r\n      const parsed = parseDiff(diffText);\r\n      setFileDiffs(parsed);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, [owner, repo, number]);\r\n\r\n  if (loading) return <p>Loading PR details...</p>;\r\n\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <h2>PR #{prDetails.number}: {prDetails.title}</h2>\r\n      <p><strong>Author:</strong> {prDetails.user?.login}</p>\r\n      <hr />\r\n\r\n      <h3>Files Changed</h3>\r\n      {fileDiffs.map(file => (\r\n        <div key={file.newPath} style={{ marginBottom: \"2rem\" }}>\r\n          <h5>{file.newPath}</h5>\r\n          <Diff viewType=\"split\" diffType={file.type} hunks={file.hunks}>\r\n            {hunks =>\r\n              hunks.map(hunk => <Hunk key={hunk.content} hunk={hunk} />)\r\n            }\r\n          </Diff>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}