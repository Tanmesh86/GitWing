{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\WIN10\\\\Downloads\\\\ai-code-review-mock\\\\ai-code-review-mock\\\\frontend\\\\src\\\\pages\\\\PRDetails.jsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { parseDiff, Diff, Hunk } from \"react-diff-view\";\nimport \"react-diff-view/style/index.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function PRDetails() {\n  _s();\n  var _prDetails$user;\n  const {\n    owner,\n    repo,\n    number\n  } = useParams();\n  const [prDetails, setPrDetails] = useState(null);\n  const [fileDiffs, setFileDiffs] = useState([]);\n  const [loading, setLoading] = useState(true);\n  useEffect(() => {\n    const token = localStorage.getItem(\"authToken\");\n    const fetchData = async () => {\n      try {\n        const res = await fetch(`http://localhost:5001/github/repos/${owner}/${repo}/pulls/${number}/details`, {\n          headers: {\n            Authorization: `Bearer ${token}`\n          }\n        });\n        if (!res.ok) {\n          throw new Error(\"Failed to fetch PR details\");\n        }\n        const data = await res.json();\n        setPrDetails(data.details || data);\n\n        // Parse file patches into a diff format\n        if (data.files && data.files.length > 0) {\n          const diffText = data.files.filter(f => f.patch) // only files with patches\n          .map(f => `diff --git a/${f.filename} b/${f.filename}\\n${f.patch}`).join(\"\\n\");\n          const parsed = parseDiff(diffText);\n          setFileDiffs(parsed);\n        }\n        setLoading(false);\n      } catch (err) {\n        console.error(err);\n        setLoading(false);\n      }\n    };\n    fetchData();\n  }, [owner, repo, number]);\n  if (loading) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"Loading PR details...\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 23\n  }, this);\n  if (!prDetails) return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: \"PR not found\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 26\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container py-4\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: [\"PR #\", prDetails.number, \": \", prDetails.title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Author:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), \" \", (_prDetails$user = prDetails.user) === null || _prDetails$user === void 0 ? void 0 : _prDetails$user.login]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"Files Changed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), fileDiffs.length === 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"No changes found\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 34\n    }, this), fileDiffs.map(file => /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        marginBottom: \"2rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n        children: file.newPath\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Diff, {\n        viewType: \"split\" // split view like GitHub\n        ,\n        diffType: file.type,\n        hunks: file.hunks,\n        highlightLines: true,\n        children: hunks => hunks.map(hunk => /*#__PURE__*/_jsxDEV(Hunk, {\n          hunk: hunk\n        }, hunk.content, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 41\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 11\n      }, this)]\n    }, file.newPath, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_s(PRDetails, \"Uc5Zsg7lck3E8wCle6uZ6qeHO2I=\", false, function () {\n  return [useParams];\n});\n_c = PRDetails;\nvar _c;\n$RefreshReg$(_c, \"PRDetails\");","map":{"version":3,"names":["React","useEffect","useState","useParams","parseDiff","Diff","Hunk","jsxDEV","_jsxDEV","PRDetails","_s","_prDetails$user","owner","repo","number","prDetails","setPrDetails","fileDiffs","setFileDiffs","loading","setLoading","token","localStorage","getItem","fetchData","res","fetch","headers","Authorization","ok","Error","data","json","details","files","length","diffText","filter","f","patch","map","filename","join","parsed","err","console","error","children","fileName","_jsxFileName","lineNumber","columnNumber","className","title","user","login","file","style","marginBottom","newPath","viewType","diffType","type","hunks","highlightLines","hunk","content","_c","$RefreshReg$"],"sources":["C:/Users/WIN10/Downloads/ai-code-review-mock/ai-code-review-mock/frontend/src/pages/PRDetails.jsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { parseDiff, Diff, Hunk } from \"react-diff-view\";\r\nimport \"react-diff-view/style/index.css\";\r\n\r\nexport default function PRDetails() {\r\n  const { owner, repo, number } = useParams();\r\n  const [prDetails, setPrDetails] = useState(null);\r\n  const [fileDiffs, setFileDiffs] = useState([]);\r\n  const [loading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"authToken\");\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const res = await fetch(\r\n          `http://localhost:5001/github/repos/${owner}/${repo}/pulls/${number}/details`,\r\n          { headers: { Authorization: `Bearer ${token}` } }\r\n        );\r\n\r\n        if (!res.ok) {\r\n          throw new Error(\"Failed to fetch PR details\");\r\n        }\r\n\r\n        const data = await res.json();\r\n        setPrDetails(data.details || data);\r\n\r\n        // Parse file patches into a diff format\r\n        if (data.files && data.files.length > 0) {\r\n          const diffText = data.files\r\n            .filter(f => f.patch) // only files with patches\r\n            .map(f => `diff --git a/${f.filename} b/${f.filename}\\n${f.patch}`)\r\n            .join(\"\\n\");\r\n\r\n          const parsed = parseDiff(diffText);\r\n          setFileDiffs(parsed);\r\n        }\r\n\r\n        setLoading(false);\r\n      } catch (err) {\r\n        console.error(err);\r\n        setLoading(false);\r\n      }\r\n    };\r\n\r\n    fetchData();\r\n  }, [owner, repo, number]);\r\n\r\n  if (loading) return <p>Loading PR details...</p>;\r\n  if (!prDetails) return <p>PR not found</p>;\r\n\r\n  return (\r\n    <div className=\"container py-4\">\r\n      <h2>\r\n        PR #{prDetails.number}: {prDetails.title}\r\n      </h2>\r\n      <p>\r\n        <strong>Author:</strong> {prDetails.user?.login}\r\n      </p>\r\n      <hr />\r\n\r\n      <h3>Files Changed</h3>\r\n      {fileDiffs.length === 0 && <p>No changes found</p>}\r\n\r\n      {fileDiffs.map(file => (\r\n        <div key={file.newPath} style={{ marginBottom: \"2rem\" }}>\r\n          <h5>{file.newPath}</h5>\r\n          <Diff\r\n            viewType=\"split\" // split view like GitHub\r\n            diffType={file.type}\r\n            hunks={file.hunks}\r\n            highlightLines\r\n          >\r\n            {hunks => hunks.map(hunk => <Hunk key={hunk.content} hunk={hunk} />)}\r\n          </Diff>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,SAAS,EAAEC,IAAI,EAAEC,IAAI,QAAQ,iBAAiB;AACvD,OAAO,iCAAiC;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzC,eAAe,SAASC,SAASA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA;EAClC,MAAM;IAAEC,KAAK;IAAEC,IAAI;IAAEC;EAAO,CAAC,GAAGX,SAAS,CAAC,CAAC;EAC3C,MAAM,CAACY,SAAS,EAAEC,YAAY,CAAC,GAAGd,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACe,SAAS,EAAEC,YAAY,CAAC,GAAGhB,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACiB,OAAO,EAAEC,UAAU,CAAC,GAAGlB,QAAQ,CAAC,IAAI,CAAC;EAE5CD,SAAS,CAAC,MAAM;IACd,MAAMoB,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,WAAW,CAAC;IAE/C,MAAMC,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,IAAI;QACF,MAAMC,GAAG,GAAG,MAAMC,KAAK,CACrB,sCAAsCd,KAAK,IAAIC,IAAI,UAAUC,MAAM,UAAU,EAC7E;UAAEa,OAAO,EAAE;YAAEC,aAAa,EAAE,UAAUP,KAAK;UAAG;QAAE,CAClD,CAAC;QAED,IAAI,CAACI,GAAG,CAACI,EAAE,EAAE;UACX,MAAM,IAAIC,KAAK,CAAC,4BAA4B,CAAC;QAC/C;QAEA,MAAMC,IAAI,GAAG,MAAMN,GAAG,CAACO,IAAI,CAAC,CAAC;QAC7BhB,YAAY,CAACe,IAAI,CAACE,OAAO,IAAIF,IAAI,CAAC;;QAElC;QACA,IAAIA,IAAI,CAACG,KAAK,IAAIH,IAAI,CAACG,KAAK,CAACC,MAAM,GAAG,CAAC,EAAE;UACvC,MAAMC,QAAQ,GAAGL,IAAI,CAACG,KAAK,CACxBG,MAAM,CAACC,CAAC,IAAIA,CAAC,CAACC,KAAK,CAAC,CAAC;UAAA,CACrBC,GAAG,CAACF,CAAC,IAAI,gBAAgBA,CAAC,CAACG,QAAQ,MAAMH,CAAC,CAACG,QAAQ,KAAKH,CAAC,CAACC,KAAK,EAAE,CAAC,CAClEG,IAAI,CAAC,IAAI,CAAC;UAEb,MAAMC,MAAM,GAAGvC,SAAS,CAACgC,QAAQ,CAAC;UAClClB,YAAY,CAACyB,MAAM,CAAC;QACtB;QAEAvB,UAAU,CAAC,KAAK,CAAC;MACnB,CAAC,CAAC,OAAOwB,GAAG,EAAE;QACZC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC;QAClBxB,UAAU,CAAC,KAAK,CAAC;MACnB;IACF,CAAC;IAEDI,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,CAACZ,KAAK,EAAEC,IAAI,EAAEC,MAAM,CAAC,CAAC;EAEzB,IAAIK,OAAO,EAAE,oBAAOX,OAAA;IAAAuC,QAAA,EAAG;EAAqB;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAChD,IAAI,CAACpC,SAAS,EAAE,oBAAOP,OAAA;IAAAuC,QAAA,EAAG;EAAY;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAG,CAAC;EAE1C,oBACE3C,OAAA;IAAK4C,SAAS,EAAC,gBAAgB;IAAAL,QAAA,gBAC7BvC,OAAA;MAAAuC,QAAA,GAAI,MACE,EAAChC,SAAS,CAACD,MAAM,EAAC,IAAE,EAACC,SAAS,CAACsC,KAAK;IAAA;MAAAL,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtC,CAAC,eACL3C,OAAA;MAAAuC,QAAA,gBACEvC,OAAA;QAAAuC,QAAA,EAAQ;MAAO;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,KAAC,GAAAxC,eAAA,GAACI,SAAS,CAACuC,IAAI,cAAA3C,eAAA,uBAAdA,eAAA,CAAgB4C,KAAK;IAAA;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C,CAAC,eACJ3C,OAAA;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAEN3C,OAAA;MAAAuC,QAAA,EAAI;IAAa;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,EACrBlC,SAAS,CAACkB,MAAM,KAAK,CAAC,iBAAI3B,OAAA;MAAAuC,QAAA,EAAG;IAAgB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,EAEjDlC,SAAS,CAACuB,GAAG,CAACgB,IAAI,iBACjBhD,OAAA;MAAwBiD,KAAK,EAAE;QAAEC,YAAY,EAAE;MAAO,CAAE;MAAAX,QAAA,gBACtDvC,OAAA;QAAAuC,QAAA,EAAKS,IAAI,CAACG;MAAO;QAAAX,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAK,CAAC,eACvB3C,OAAA,CAACH,IAAI;QACHuD,QAAQ,EAAC,OAAO,CAAC;QAAA;QACjBC,QAAQ,EAAEL,IAAI,CAACM,IAAK;QACpBC,KAAK,EAAEP,IAAI,CAACO,KAAM;QAClBC,cAAc;QAAAjB,QAAA,EAEbgB,KAAK,IAAIA,KAAK,CAACvB,GAAG,CAACyB,IAAI,iBAAIzD,OAAA,CAACF,IAAI;UAAoB2D,IAAI,EAAEA;QAAK,GAAzBA,IAAI,CAACC,OAAO;UAAAlB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAe,CAAC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAChE,CAAC;IAAA,GATCK,IAAI,CAACG,OAAO;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAUjB,CACN,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEV;AAACzC,EAAA,CA3EuBD,SAAS;EAAA,QACCN,SAAS;AAAA;AAAAgE,EAAA,GADnB1D,SAAS;AAAA,IAAA0D,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}